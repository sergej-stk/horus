@page "/"
@using Horus
@using Horus.Models
@using Microsoft.EntityFrameworkCore
@using Horus.Data;

@inject AppDBContext _context;

<h3>Users</h3>

@if (users == null)
{
    <p>Loading...</p>
}
else
{
    <MudTable Items="users" Hover="true" Striped="true">
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>Username</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Created At</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Username</MudTd>
            <MudTd>@context.Email</MudTd>
            <MudTd>@context.CreatedAt?.ToString("yyyy-MM-dd HH:mm")</MudTd>
        </RowTemplate>
    </MudTable>

      <MudTable Items="users" Hover="true" SortLabel="Sort By" Elevation="0" AllowUnsorted="false">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<User, object>(x=>x.Username)">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<User, object>(x=>x.Username)">Username</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<User, object>(x=>x.Email)">E-Mail</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Username">@context.Username</MudTd>
            <MudTd DataLabel="Email)">@context.Email</MudTd>
            <MudTd DataLabel="CreatedAt">@context.CreatedAt</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private List<User> users;

    protected override async Task OnInitializedAsync()
    {
        users = await _context.Users.ToListAsync();
    }
}
